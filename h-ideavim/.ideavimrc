" create comments with <n>gcc / <v>gc
set commentary
" <v>S or <n>cs to surround or change surround
set surround
" highlight what is being copied
set highlightedyank

" <space> as <leader>
let mapleader = " "

" 8 lines above or below always visible on the screen
set scrolloff=8
" search options
set incsearch
set wrapscan
" don't play sound on error
set visualbell
" display current line number and relative line numbers above and below
set number relativenumber
" don't change the mode when refactoring
set idearefactormode=keep
set lookupkeys=<Up>,<Down>,<Left>,<Right>,<C-N>,<C-P>,<Tab>
" don't use vim in dialog boxes
set ideavimsupport=''
" use smart join
set ideajoin

" use system clipboard
set clipboard=unnamedplus,unnamed,ideaput
" clipboard history menu
nmap <leader>p <action>(PasteMultiple)

" reselect after indenting
vnoremap < <gv
vnoremap > >gv

" code navigation
nmap gd <action>(GotoDeclaration)
nmap gr <action>(GotoDeclaration)
nmap gt <action>(GotoTest)
nmap gi <action>(GotoImplementation)
nmap ge <action>(GotoNextError)

nmap [[ <action>(MethodUp)
nmap ]] <action>(MethodDown)

nmap <C-O> <action>(Back)
nmap <C-I> <action>(Forward)

" move one CamelHump at a time
nnoremap <A-W> [w
nnoremap <A-E> ]w
nnoremap <A-B> [b
vnoremap <A-W> [w
vnoremap <A-E> ]w
vnoremap <A-B> [b

" access documentation for the current symbol
nmap K <action>(QuickJavaDoc)
nmap <A-K> <action>(ShowErrorDescription)

" code refactoring and manipulation
nmap <leader>R <action>(RenameElement)
nmap <leader>r <action>(Refactorings.QuickListPopupAction)
vmap <leader>r <action>(Refactorings.QuickListPopupAction)
nmap <leader>s <action>(SurroundWith)
vmap <leader>s <action>(SurroundWith)
nmap <leader><space> <action>(ShowIntentionActions)
vmap <leader><space> <action>(ShowIntentionActions)

nmap <C-K> <action>(MoveStatementUp)
nmap <C-J> <action>(MoveStatementDown)
nmap <C-H> <action>(MoveElementLeft)
nmap <C-L> <action>(MoveElementRight)
vmap <C-K> <action>(MoveLineUp)
vmap <C-J> <action>(MoveLineDown)
vmap <C-H> <action>(MoveElementLeft)
vmap <C-L> <action>(MoveElementRight)

" multi-cursor
nmap <leader>m <action>(SelectNextOccurrence)
nmap <leader>M <action>(SelectAllOccurrences)
vmap <leader>m <action>(SelectNextOccurrence)
vmap <leader>M <action>(SelectAllOccurrences)

" word-based autocompletion
imap <C-N> <action>(HippieCompletion)
imap <C-P> <action>(HippieBackwardCompletion)

" IntelliJ window tools and navigation
nmap L :tabnext<CR>
nmap H :tabprev<CR>

" <C- Control
nmap <C-P> <action>(GotoFile)
nmap <C-S-P> <action>(GotoAction)
" <D- Command (Mac)
nmap <D-P> <action>(GotoFile)
nmap <D-S-P> <action>(GotoAction)

" run last target
nmap <C-X> <action>(Run)
" run currently selected class or method
nmap X <action>(RunClass)
" debug last target
nmap <C-S-X> <action>(Debug)

nmap <leader>tx <action>(ActivateTerminalToolWindow)
nmap <leader>tc <action>(ActivateCommitToolWindow)
nmap <leader>tp <action>(ActivateProjectToolWindow)
nmap <leader>ts <action>(ActivateServicesToolWindow)
nmap <leader>tg <action>(ActivateVersionControlToolWindow)
nmap <leader>te <action>(ActivateProblemsViewToolWindow)
nmap <leader>td <action>(ActivateTODOToolWindow)
nmap <leader>tk <action>(tasks.goto)
" manage notifications
nmap <leader>tnn <action>(ActivateNotificationsToolWindow)
nmap <leader>tnc <action>(ClearAllNotifications)
" focus on the editor
nmap <leader>tt <action>(HideAllWindows)

nmap <leader>no <action>(OpenFile)
nmap <leader>nf <action>(NewFile)
nmap <leader>ns <action>(NewScratchFile)

" Git (VCS)
nmap <leader>gc <action>(ActivateCommitToolWindow)
nmap <leader>gp <action>(Vcs.Push)
nmap <leader>gu <action>(Vcs.UpdateProject)
nmap <leader>gb <action>(Git.Branches)

" Find and replace
nmap / <action>(Find)
vmap / <action>(Find)
nmap ? <action>(Replace)
vmap ? <action>(Replace)

nmap <leader>ff <action>(FindInPath)
vmap <leader>ff <action>(FindInPath)
nmap <leader>fr <action>(ReplaceInPath)
vmap <leader>fr <action>(ReplaceInPath)

" set ideavim to handle all keyboard shortcuts
sethandler <C-2> a:vim
sethandler <C-S-2> a:vim
sethandler <C-6> a:vim
sethandler <C-S-6> a:vim
sethandler <C-A> a:vim
sethandler <C-B> a:vim
sethandler <C-C> a:vim
sethandler <C-D> a:vim
sethandler <C-E> a:vim
sethandler <C-F> a:vim
sethandler <C-G> a:vim
sethandler <C-H> a:vim
sethandler <C-I> a:vim
sethandler <C-J> a:vim
sethandler <C-K> a:vim
sethandler <C-L> a:vim
sethandler <C-M> a:vim
sethandler <C-N> a:vim
sethandler <C-O> a:vim
sethandler <C-P> a:vim
sethandler <C-Q> a:vim
sethandler <C-R> a:vim
sethandler <C-S> a:vim
sethandler <C-U> a:vim
sethandler <C-V> a:vim
sethandler <C-W> a:vim
sethandler <C-X> a:vim
sethandler <C-Y> a:vim
sethandler <C-[> a:vim
sethandler <C-\> a:vim
sethandler <C-]> a:vim
sethandler <C-S-P> a:vim
sethandler <C-T> a:vim
sethandler <C-`> a:vim
sethandler <C-S-X> a:vim
sethandler <D-P> a:vim
sethandler <D-S-P> a:vim
